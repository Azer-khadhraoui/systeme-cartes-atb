const mysql = require('mysql2/promise');

async function recreateDatabase() {
  let connection;
  
  try {
    console.log('üîß D√©but de la recr√©ation de la base de donn√©es...');
    
    // Connexion √† MySQL (sans sp√©cifier de base de donn√©es)
    connection = await mysql.createConnection({
      host: '127.0.0.1',
      user: 'root',
      password: '', // Mot de passe vide par d√©faut pour XAMPP
      port: 3307
    });
    
    console.log('‚úÖ Connexion √† MySQL r√©ussie');
    
    // Supprimer la base si elle existe et la recr√©er
    await connection.execute('DROP DATABASE IF EXISTS gestion_cartes');
    console.log('üóëÔ∏è Ancienne base de donn√©es supprim√©e (si elle existait)');
    
    await connection.execute('CREATE DATABASE gestion_cartes CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci');
    console.log('‚úÖ Base de donn√©es "gestion_cartes" cr√©√©e');
    
    // Se connecter √† la nouvelle base
    await connection.changeUser({database: 'gestion_cartes'});
    console.log('‚úÖ Connexion √† la base "gestion_cartes"');
    
    // Cr√©er la table des employ√©s
    const createEmployeesTable = `
      CREATE TABLE employes (
        id INT AUTO_INCREMENT PRIMARY KEY,
        matricule VARCHAR(6) UNIQUE NOT NULL,
        nom VARCHAR(50) NOT NULL,
        prenom VARCHAR(50) NOT NULL,
        mdp TEXT NOT NULL,
        date_creation TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        date_modification TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
    `;
    
    await connection.execute(createEmployeesTable);
    console.log('‚úÖ Table "employes" cr√©√©e');
    
    // Cr√©er la table des cartes
    const createCartesTable = `
      CREATE TABLE cartes (
        id INT AUTO_INCREMENT PRIMARY KEY,
        nom VARCHAR(50) NOT NULL,
        prenom VARCHAR(50) NOT NULL,
        cin VARCHAR(8) NOT NULL,
        type VARCHAR(100) NOT NULL,
        numCompte VARCHAR(20) NOT NULL,
        emp VARCHAR(10) NOT NULL,
        date DATE NOT NULL,
        etat ENUM('en_stock', 'en_cours', 'delivree') DEFAULT 'en_stock',
        date_creation TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        date_modification TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        UNIQUE KEY unique_cin_type (cin, type)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
    `;
    
    await connection.execute(createCartesTable);
    console.log('‚úÖ Table "cartes" cr√©√©e');
    
    // Cr√©er un employ√© de test
    const bcrypt = require('bcryptjs');
    const testPassword = await bcrypt.hash('admin123', 10);
    
    const insertTestEmployee = `
      INSERT INTO employes (matricule, nom, prenom, mdp) 
      VALUES ('123456', 'Admin', 'ATB', ?)
    `;
    
    await connection.execute(insertTestEmployee, [testPassword]);
    console.log('‚úÖ Employ√© de test cr√©√© (Matricule: 123456, Mot de passe: admin123)');
    
    // Cr√©er quelques cartes de test
    const insertTestCartes = `
      INSERT INTO cartes (nom, prenom, cin, type, numCompte, emp, date, etat) VALUES
      ('Dupont', 'Jean', '12345678', 'Visa Electron Debit', '1234567890123456', 'A1', CURDATE(), 'en_stock'),
      ('Martin', 'Marie', '87654321', 'Mastercard', '6543210987654321', 'B2', CURDATE(), 'en_cours'),
      ('Dubois', 'Pierre', '11223344', 'VISA Gold', '9876543210123456', 'C3', CURDATE(), 'delivree')
    `;
    
    await connection.execute(insertTestCartes);
    console.log('‚úÖ Cartes de test cr√©√©es');
    
    console.log('\nüéâ Base de donn√©es recr√©√©e avec succ√®s !');
    console.log('\nüìã Informations de connexion :');
    console.log('   - Employ√© de test : Matricule 123456, Mot de passe admin123');
    console.log('   - 3 cartes de test ajout√©es');
    console.log('\nüöÄ Vous pouvez maintenant d√©marrer votre application !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la recr√©ation de la base de donn√©es:', error.message);
    console.log('\nüîß Solutions possibles :');
    console.log('   1. V√©rifiez que XAMPP MySQL est d√©marr√©');
    console.log('   2. V√©rifiez que le port 3306 est libre');
    console.log('   3. V√©rifiez les param√®tres de connexion MySQL');
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîå Connexion ferm√©e');
    }
  }
}

// Ex√©cuter le script
recreateDatabase();
